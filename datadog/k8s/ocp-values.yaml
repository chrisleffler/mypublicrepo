datadog:
  apiKeyExistingSecret: datadog-keys
  # Uncomment site: if using a Datadog Organization outside of US1
  # site: ddog-gov.com
  clusterName: <CLUSTER_NAME>
  criSocketPath: /var/run/crio/crio.sock
  apm:
    portEnabled: true
  dogstatsd:
    useHostPort: true
  logs:
    enabled: true
    containerCollectAll: true
    autoMultiLineDetection: true
  networkMonitoring:
    enabled: true
  processAgent:
    processCollection: true
  kubeStateMetricsCore:
    enabled: true
  kubeStateMetricsEnabled: false
  # Uncomment if running OCP on a supported cloud platform
  # useHostNetwork: true
  # Depending on your DNS/SSL setup, it might not be possible to verify the Kubelet cert properly
  # If you have proper CA, you can switch kubelet.tlsVerify to true
  kubelet:
    tlsVerify: false
  env:
    - name: DD_INVENTORIES_CONFIGURATION_ENABLED
      value: "true"
agents:
  podSecurity:
    securityContextConstraints:
      create: true
  tolerations:
  - effect: NoSchedule
    key: node-role.kubernetes.io/master
    operator: Exists
  - effect: NoSchedule
    key: node-role.kubernetes.io/infra
    operator: Exists
clusterAgent:
  admissionController:
    enabled: true
    # clusterAgent.admissionController.mutateUnlabelled -- Enable injecting config without having the pod label 'admission.datadoghq.com/enabled="true". See -- https://docs.datadoghq.com/containers/cluster_agent/admission_controller/?tab=helm'
    mutateUnlabelled: false
  podSecurity:
    securityContextConstraints:
      create: true